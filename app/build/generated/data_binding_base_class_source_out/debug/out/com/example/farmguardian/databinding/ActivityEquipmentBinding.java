// Generated by view binder compiler. Do not edit!
package com.example.farmguardian.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.farmguardian.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEquipmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView EquipmentBack;

  @NonNull
  public final CardView EquipmentBuy;

  @NonNull
  public final CardView EquipmentShare;

  @NonNull
  public final TextView textViewFG;

  private ActivityEquipmentBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView EquipmentBack, @NonNull CardView EquipmentBuy,
      @NonNull CardView EquipmentShare, @NonNull TextView textViewFG) {
    this.rootView = rootView;
    this.EquipmentBack = EquipmentBack;
    this.EquipmentBuy = EquipmentBuy;
    this.EquipmentShare = EquipmentShare;
    this.textViewFG = textViewFG;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEquipmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEquipmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_equipment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEquipmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EquipmentBack;
      CardView EquipmentBack = ViewBindings.findChildViewById(rootView, id);
      if (EquipmentBack == null) {
        break missingId;
      }

      id = R.id.EquipmentBuy;
      CardView EquipmentBuy = ViewBindings.findChildViewById(rootView, id);
      if (EquipmentBuy == null) {
        break missingId;
      }

      id = R.id.EquipmentShare;
      CardView EquipmentShare = ViewBindings.findChildViewById(rootView, id);
      if (EquipmentShare == null) {
        break missingId;
      }

      id = R.id.textViewFG;
      TextView textViewFG = ViewBindings.findChildViewById(rootView, id);
      if (textViewFG == null) {
        break missingId;
      }

      return new ActivityEquipmentBinding((RelativeLayout) rootView, EquipmentBack, EquipmentBuy,
          EquipmentShare, textViewFG);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
